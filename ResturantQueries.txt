1. Write a MongoDB query to display all the documents in the 
collection restaurants1. Write a MongoDB query to display 
the documents in the collection restaurants

>db.rest.find()


2. Write a MongoDB query to display the fields restaurant_id, 
name, and cuisine for all the documents in the collection restaurant

>db.rest.find({},{"Rid" : 1,"rname":1,"cuisine" :1})

3.. Write a MongoDB query to display the fields restaurant_id, 
name, and cuisine, but exclude the field _id for all the documents 
in the collection restaurant. 

>  db.rest.find({},{"Rid" : 1,"rname":1,"cuisine" :1,_id:0})  


4. Write a MongoDB query to display the fields restaurant_id, name, 
and zip code, but exclude the field _id for all the documents in 
the collection restaurant

>db.rest.find({},{Rid:1,rname:1,"address.zipcode":1,_id:0})


 5. Write a MongoDB query to display all the restaurant which is in Chennai

>db.rest.find({"address.city":"porur"})


6. Write a MongoDB query to display the first 2 restaurant which 
   is in the district Chennai. 

>  db.rest.find({"address.city":"porur"}).limit(2)

7.Write a MongoDB query to display the next 2 restaurants 
  after skipping first 2 which are in the Chennai

>  db.rest.find({"address.city":"porur"}).skip(2).limit(2)


 8. Write a MongoDB query to find the
 restaurants who achieved a score more than 90. 

>db.rest.find({rating:{$elemMatch:{score:{$gt:90}}}})



 9. Write a MongoDB query to find the restaurants that achieved a score,
 more than 80 but less than 100.

>db.rest.find({rating:{$elemMatch:{score:{$gt:80,$lt:100}}}})


11. Write a MongoDB query to find the restaurants that do not prepare 
any cuisine of “Thai” and their grade score more than 70

>db.rest.find({cuisine:{$ne:"thai"},rating:{$elemMatch:{score:{$gt:70}}}})


12. Write a MongoDB query to find the restaurants which do not
 prepare any cuisine of 'American' and achieved a score more than 70 

>db.rest.find({cuisine:{$ne:"ameriacn"},rating:{$elemMatch:{score:{$gt:70}}}}).sort({"cuisine":-1})


13. Write a MongoDB query to find the restaurants which do not
 prepare any cuisine of 'American ' and achieved a rating point greater than '4' 


>db.rest.find({cuisine:{$ne:"ameriacn"},rating:{$elemMatch:{rating:{$gt:4}}}}).sort({"cuisine":-1})


14. Write a MongoDB query to find the restaurant Id, name,
 cuisine for those restaurants which contain 'Wil' as first three 
letters for its name

>db.rest.find({rname:/^wil/})

15. Write a MongoDB query to find the restaurant Id, name, 
city and cuisine for those restaurants which contain 'ces' 
as last three letters for its name. 

>db.rest.find({rname:/ces$/})


 16. Write a MongoDB query to find the restaurant Id, name, city 
 and cuisine for those restaurants which contain 'Reg' as three 
letters somewhere in its name.  

>db.rest.find({rname:/Reg/})

17. Write a MongoDB query to find the restaurants which belong 
to the district chennai and prepared either American or Chinese dish. 

>db.rest.find({"dist":"chennai",
                  $or:[{"cuisine":"ameriacn","cuisine":"chinese"}]})

18. Write a MongoDB query to find the restaurant Id, name, district 
and cuisine for those restaurants which belong to the district Chennai 

>db.rest.find({"dist":"chennai"},{"Rid" : 1,"rname":1,
              "dist":1,"cuisine" :1,_id:0})

 19. Write a MongoDB query to find the restaurant Id, name,
 district and cuisine for those restaurants which are not
 belonging to the district Chennai 

>db.rest.find({"dist":{$ne:"chennai"}},{"Rid" : 1,"rname":1,
              "dist":1,"cuisine" :1,_id:0})

20. Write a MongoDB query to find the restaurant Id, name, 
district and cuisine for those restaurants which achieved a 
score which is not more than 10. 

>db.rest.find({rating:{$elemMatch:{score:{$lt:10}}}},{"Rid" : 1,"rname":1,
              "dist":1,"cuisine" :1,_id:0})


21. Write a MongoDB query to find the restaurant Id, name, 
district and cuisine for those restaurants 
which prepared dish except 'American' and 'Chinees' or 
restaurant's name begins with letter 'Wil'. 

>db.rest.find({$or: [
  {rname: /^Wil/}, 
  {"$and": [
       {"cuisine" : {$ne :"American "}}, 
       {"cuisine" : {$ne :"Chineese"}}
   ]}
]}
,{"Rid" : 1,"rname":1,"dist":1,"cuisine" :1}
)


 22. Write a MongoDB query to find the restaurant Id, name, 
and grades for those restaurants which achieved a rating of "4" 
and scored 90 on an ISODate "2014-08-11T00:00:00Z" 
among many of survey dates.. 

>db.rest.find( 
                {
                 "rating.date": ISODate("2014-08-11T00:00:00Z"), 
                 "rating.rating":4 , 
                 "rating.score" : 90
                }, 
                {"Rid" : 1,"rname":1,"rating":1}
             )

25. Write a MongoDB query to arrange the name of the restaurants 
in ascending order along with all the columns 

>db.rest.find().sort({"rname":1})


26. Write a MongoDB query to arrange the name of the 
restaurants in descending along with all the columns. 

> db.rest.find().sort({"name":-1})

27. Write a MongoDB query to arranged the name 
of the cuisine in ascending order and  
 district should be in descending order. 

>db.rest.find().sort({"cuisine":1,"dist" : -1})

28. Write a MongoDB query to know whether all the addresses 
contains the street or not. 

>db.rest.find({"address.street" : { $exists : true } })


31. Write a MongoDB query to find the restaurant name, 
district, and cuisine for those restaurants 
which contains 'mon' as three letters somewhere in its name. 

>db.rest.find({ rname : 
                     { $regex : "mon.*", $options: "i" } 
                   },
                       {
                         "rname":1,
                         "dist":1,
                         
                         "cuisine" :1
                        })

32. Write a MongoDB query to find the restaurant name, 
district, and cuisine for those restaurants which 
contain 'Mad' as first three letters of its name

 db.rest.find(
                   { rname : 
                     { $regex : /^Mad/i, } 
                   },
                       {
                         "rname":1,
                         "dist":1,
                         
                         "cuisine" :1
                        })
                   

                   




                     
                   




















 




